{"ast":null,"code":"// import axios from 'axios';\n// import React, { createContext, useState, useEffect, useContext } from 'react'\n// export const Context = createContext();\n// export const DataProvider = ({children}) => {\n//     const [products, setProducts] = useState([]);\n//     const [cart, setCart] = useState([]);\n//     const [total, setTotal] = useState(0);\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             await axios(\"http://localhost:8080\")\n//                 .then(result => {\n//                     console.log(result);\n//                     setProducts(result.products);\n//                     localStorage.setItem('dataCart', JSON.stringify(cart));\n//                 },\n//                     (error) => {\n//                         console.log(error);\n//                     }\n//                 )\n//         };\n//         fetchData();\n//     }, [])\n//     const addCart = (id) => {\n//         const check = cart.every(item => {\n//             return item.id === id;\n//         })\n//         if (check) {\n//             const data = products.filter(product => {\n//                 return product.id === id;\n//             })\n//             setCart([...cart, ...data])\n//         } else {\n//             alert('Please select a product from the list');\n//         }\n//     }\n//     const reduction = id => {\n//         cart.forEach(item => {\n//             if (item.id === id) {\n//                 item.count === 1 ? item.count = 1 : item.count -= 1;\n//             }\n//         })\n//         setCart(cart)\n//         getTotal()\n//     }\n//     const increase = id => {\n//         cart.forEach(item => {\n//             if (item.id === id) {\n//                 item.count += 1;\n//             }\n//         })\n//         setCart(cart)\n//         getTotal()\n//     }\n//     const removeProduct = id => {\n//         if (window.confirm('Are you sure you want to remove Product?')) {\n//             cart.forEach((item, index) => {\n//                 if (item.id === id) {\n//                     cart.splice(index, 1);\n//                 }\n//             })\n//             setCart(cart)\n//             getTotal()\n//         }\n//     }\n//     const getTotal = () => {\n//         const res = cart.reduce((prev, item) => {\n//             return prev + (item.count * item.price);\n//         }, 0)\n//         setTotal(res)\n//     }\n//     // useEffect(() => {\n//     //     localStorage.setItem('dataCart', JSON.stringify(cart));\n//     //     const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n//     //     if (dataCart !== null) {\n//     //         setCart(dataCart);\n//     //     }\n//     //     localStorage.setItem('dataTotal', JSON.stringify(total));\n//     //     const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n//     //     if (dataTotal !== null) {\n//     //         setTotal(dataTotal);\n//     //     }\n//     // })\n//     return (\n//         <Context.Provider\n//             value={{ products, addCart, cart, reduction, increase, removeProduct, total, getTotal }}>\n//             {children}\n//         </Context.Provider>\n//     )\n// }","map":{"version":3,"names":[],"sources":["D:/TMA-React/demoTest/Demo/client/src/contexts/Context.js"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { createContext, useState, useEffect, useContext } from 'react'\r\n\r\n// export const Context = createContext();\r\n\r\n// export const DataProvider = ({children}) => {\r\n//     const [products, setProducts] = useState([]);\r\n//     const [cart, setCart] = useState([]);\r\n//     const [total, setTotal] = useState(0);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             await axios(\"http://localhost:8080\")\r\n//                 .then(result => {\r\n//                     console.log(result);\r\n//                     setProducts(result.products);\r\n//                     localStorage.setItem('dataCart', JSON.stringify(cart));\r\n//                 },\r\n//                     (error) => {\r\n//                         console.log(error);\r\n//                     }\r\n//                 )\r\n//         };\r\n//         fetchData();\r\n//     }, [])\r\n\r\n//     const addCart = (id) => {\r\n\r\n//         const check = cart.every(item => {\r\n//             return item.id === id;\r\n//         })\r\n//         if (check) {\r\n//             const data = products.filter(product => {\r\n//                 return product.id === id;\r\n//             })\r\n//             setCart([...cart, ...data])\r\n//         } else {\r\n//             alert('Please select a product from the list');\r\n//         }\r\n//     }\r\n\r\n//     const reduction = id => {\r\n//         cart.forEach(item => {\r\n//             if (item.id === id) {\r\n//                 item.count === 1 ? item.count = 1 : item.count -= 1;\r\n//             }\r\n//         })\r\n//         setCart(cart)\r\n//         getTotal()\r\n//     }\r\n\r\n//     const increase = id => {\r\n//         cart.forEach(item => {\r\n//             if (item.id === id) {\r\n//                 item.count += 1;\r\n//             }\r\n//         })\r\n//         setCart(cart)\r\n//         getTotal()\r\n//     }\r\n\r\n//     const removeProduct = id => {\r\n//         if (window.confirm('Are you sure you want to remove Product?')) {\r\n//             cart.forEach((item, index) => {\r\n//                 if (item.id === id) {\r\n//                     cart.splice(index, 1);\r\n//                 }\r\n//             })\r\n//             setCart(cart)\r\n//             getTotal()\r\n//         }\r\n//     }\r\n\r\n//     const getTotal = () => {\r\n//         const res = cart.reduce((prev, item) => {\r\n//             return prev + (item.count * item.price);\r\n//         }, 0)\r\n//         setTotal(res)\r\n//     }\r\n\r\n//     // useEffect(() => {\r\n//     //     localStorage.setItem('dataCart', JSON.stringify(cart));\r\n//     //     const dataCart = JSON.parse(localStorage.getItem('dataCart'));\r\n//     //     if (dataCart !== null) {\r\n//     //         setCart(dataCart);\r\n//     //     }\r\n//     //     localStorage.setItem('dataTotal', JSON.stringify(total));\r\n//     //     const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\r\n//     //     if (dataTotal !== null) {\r\n//     //         setTotal(dataTotal);\r\n//     //     }\r\n//     // })\r\n\r\n\r\n//     return (\r\n//         <Context.Provider\r\n//             value={{ products, addCart, cart, reduction, increase, removeProduct, total, getTotal }}>\r\n//             {children}\r\n//         </Context.Provider>\r\n//     )\r\n\r\n// }\r\n"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}