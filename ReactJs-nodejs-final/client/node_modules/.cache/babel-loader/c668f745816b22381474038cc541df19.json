{"ast":null,"code":"var _jsxFileName = \"D:\\\\TMA-React\\\\demoTest\\\\Demo\\\\client\\\\src\\\\contexts\\\\CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const check = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  if (check) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, currentItem) => total + currentItem.quantity, 0);\n    setCartCount(newCartCount); // if(cartItems !== newCartCount) {\n    //     localStorage.setItem('dataCart', JSON.stringify(cartItems));\n    // }\n\n    console.log(newCartCount);\n    console.log(cartItems);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    console.log(productToAdd);\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  console.log(addItemToCart);\n  console.log(setIsCartOpen);\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","check","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","CartProvider","children","setCartItems","setCartCount","newCartCount","reduce","total","currentItem","console","log","value"],"sources":["D:/TMA-React/demoTest/Demo/client/src/contexts/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\r\n\r\nconst addCartItem = (cartItems, productToAdd) => {\r\n    const check = cartItems.find(\r\n        (cartItem) => cartItem.id === productToAdd.id\r\n    );\r\n    if (check) {\r\n        return cartItems.map(\r\n            (cartItem) => cartItem.id === productToAdd.id ?\r\n            {...cartItem, quantity: cartItem.quantity +1} : cartItem\r\n        )\r\n    }\r\n\r\n    return [...cartItems, {...productToAdd, quantity: 1}]\r\n}\r\n\r\nexport const CartContext = createContext({\r\n    isCartOpen: false,\r\n    setIsCartOpen: () => {},\r\n    cartItems: [],\r\n    addItemToCart: () => {},\r\n    cartCount: 0\r\n})\r\n\r\nexport const CartProvider = ({children}) => {\r\n    const [isCartOpen, setIsCartOpen] = useState(false)\r\n    const [cartItems, setCartItems] = useState([])\r\n    const [cartCount, setCartCount] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const newCartCount = cartItems.reduce((total, currentItem) => total + currentItem.quantity, 0)\r\n        setCartCount(newCartCount);\r\n        // if(cartItems !== newCartCount) {\r\n        //     localStorage.setItem('dataCart', JSON.stringify(cartItems));\r\n        // }\r\n        console.log(newCartCount)\r\n        console.log(cartItems)\r\n        \r\n    }, [cartItems]);\r\n\r\n    const addItemToCart = (productToAdd) => {\r\n        console.log(productToAdd)\r\n        setCartItems(addCartItem(cartItems, productToAdd));\r\n    }\r\n    console.log(addItemToCart)\r\n    console.log(setIsCartOpen)\r\n    const value = {isCartOpen, setIsCartOpen, addItemToCart, cartItems, cartCount};\r\n\r\n    return (\r\n        <CartContext.Provider value={value}>{children}</CartContext.Provider>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;EAC7C,MAAMC,KAAK,GAAGF,SAAS,CAACG,IAAV,CACTC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EADjC,CAAd;;EAGA,IAAIH,KAAJ,EAAW;IACP,OAAOF,SAAS,CAACM,GAAV,CACFF,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GACd,EAAC,GAAGD,QAAJ;MAAcG,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAmB;IAA3C,CADc,GACkCH,QAF7C,CAAP;EAIH;;EAED,OAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,YAAJ;IAAkBM,QAAQ,EAAE;EAA5B,CAAf,CAAP;AACH,CAZD;;AAcA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAAC;EACrCa,UAAU,EAAE,KADyB;EAErCC,aAAa,EAAE,MAAM,CAAE,CAFc;EAGrCV,SAAS,EAAE,EAH0B;EAIrCW,aAAa,EAAE,MAAM,CAAE,CAJc;EAKrCC,SAAS,EAAE;AAL0B,CAAD,CAAjC;AAQP,OAAO,MAAMC,YAAY,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACxC,MAAM,CAACL,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACG,SAAD,EAAYe,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACe,SAAD,EAAYI,YAAZ,IAA4BnB,QAAQ,CAAC,CAAD,CAA1C;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMmB,YAAY,GAAGjB,SAAS,CAACkB,MAAV,CAAiB,CAACC,KAAD,EAAQC,WAAR,KAAwBD,KAAK,GAAGC,WAAW,CAACb,QAA7D,EAAuE,CAAvE,CAArB;IACAS,YAAY,CAACC,YAAD,CAAZ,CAFY,CAGZ;IACA;IACA;;IACAI,OAAO,CAACC,GAAR,CAAYL,YAAZ;IACAI,OAAO,CAACC,GAAR,CAAYtB,SAAZ;EAEH,CATQ,EASN,CAACA,SAAD,CATM,CAAT;;EAWA,MAAMW,aAAa,GAAIV,YAAD,IAAkB;IACpCoB,OAAO,CAACC,GAAR,CAAYrB,YAAZ;IACAc,YAAY,CAAChB,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;EACH,CAHD;;EAIAoB,OAAO,CAACC,GAAR,CAAYX,aAAZ;EACAU,OAAO,CAACC,GAAR,CAAYZ,aAAZ;EACA,MAAMa,KAAK,GAAG;IAACd,UAAD;IAAaC,aAAb;IAA4BC,aAA5B;IAA2CX,SAA3C;IAAsDY;EAAtD,CAAd;EAEA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEW,KAA7B;IAAA,UAAqCT;EAArC;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CA3BM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}